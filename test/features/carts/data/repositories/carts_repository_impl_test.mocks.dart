// Mocks generated by Mockito 5.4.6 from annotations
// in holo_mobile/test/features/carts/data/repositories/carts_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:holo_mobile/features/carts/data/datasources/cart_local_data_source.dart'
    as _i5;
import 'package:holo_mobile/features/carts/data/datasources/carts_remote_data_source.dart'
    as _i3;
import 'package:holo_mobile/features/carts/data/models/cart_model.dart' as _i2;
import 'package:holo_mobile/features/carts/domain/entities/cart.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCartModel_0 extends _i1.SmartFake implements _i2.CartModel {
  _FakeCartModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CartsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartsRemoteDataSource extends _i1.Mock
    implements _i3.CartsRemoteDataSource {
  MockCartsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CartModel> getCart(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getCart, [id]),
            returnValue: _i4.Future<_i2.CartModel>.value(
              _FakeCartModel_0(this, Invocation.method(#getCart, [id])),
            ),
          )
          as _i4.Future<_i2.CartModel>);

  @override
  _i4.Future<_i2.CartModel> createCart(
    int? userId,
    List<Map<String, dynamic>>? products,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createCart, [userId, products]),
            returnValue: _i4.Future<_i2.CartModel>.value(
              _FakeCartModel_0(
                this,
                Invocation.method(#createCart, [userId, products]),
              ),
            ),
          )
          as _i4.Future<_i2.CartModel>);

  @override
  _i4.Future<_i2.CartModel> updateCart(
    int? id,
    List<Map<String, dynamic>>? products,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateCart, [id, products]),
            returnValue: _i4.Future<_i2.CartModel>.value(
              _FakeCartModel_0(
                this,
                Invocation.method(#updateCart, [id, products]),
              ),
            ),
          )
          as _i4.Future<_i2.CartModel>);

  @override
  _i4.Future<void> deleteCart(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCart, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [CartLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartLocalDataSource extends _i1.Mock
    implements _i5.CartLocalDataSource {
  MockCartLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> saveCart(_i6.Cart? cart) =>
      (super.noSuchMethod(
            Invocation.method(#saveCart, [cart]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i6.Cart?> loadCart() =>
      (super.noSuchMethod(
            Invocation.method(#loadCart, []),
            returnValue: _i4.Future<_i6.Cart?>.value(),
          )
          as _i4.Future<_i6.Cart?>);

  @override
  _i4.Future<void> clearCart() =>
      (super.noSuchMethod(
            Invocation.method(#clearCart, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
