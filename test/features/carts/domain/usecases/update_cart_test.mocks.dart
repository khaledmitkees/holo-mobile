// Mocks generated by Mockito 5.4.6 from annotations
// in holo_mobile/test/features/carts/domain/usecases/update_cart_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:holo_mobile/features/carts/domain/entities/cart.dart' as _i2;
import 'package:holo_mobile/features/carts/domain/repositories/carts_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCart_0 extends _i1.SmartFake implements _i2.Cart {
  _FakeCart_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CartsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartsRepository extends _i1.Mock implements _i3.CartsRepository {
  MockCartsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Cart> getCart(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getCart, [id]),
            returnValue: _i4.Future<_i2.Cart>.value(
              _FakeCart_0(this, Invocation.method(#getCart, [id])),
            ),
          )
          as _i4.Future<_i2.Cart>);

  @override
  _i4.Future<_i2.Cart> createCartWithItem(int? productId, int? quantity) =>
      (super.noSuchMethod(
            Invocation.method(#createCartWithItem, [productId, quantity]),
            returnValue: _i4.Future<_i2.Cart>.value(
              _FakeCart_0(
                this,
                Invocation.method(#createCartWithItem, [productId, quantity]),
              ),
            ),
          )
          as _i4.Future<_i2.Cart>);

  @override
  _i4.Future<_i2.Cart> updateCartItem(int? id, int? productId, int? quantity) =>
      (super.noSuchMethod(
            Invocation.method(#updateCartItem, [id, productId, quantity]),
            returnValue: _i4.Future<_i2.Cart>.value(
              _FakeCart_0(
                this,
                Invocation.method(#updateCartItem, [id, productId, quantity]),
              ),
            ),
          )
          as _i4.Future<_i2.Cart>);

  @override
  _i4.Future<void> deleteCart(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCart, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> addToCart(int? productId, int? quantity) =>
      (super.noSuchMethod(
            Invocation.method(#addToCart, [productId, quantity]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
